#!/bin/bash
# compile

# the example is:
# sed 's/\( [0-9]\) .*/\1/'
# outname=$(sed 's/^\.$/^$/' $1) ??

# does not work for some reason - which regex is used for that? any fault in the syntax or logic?
# outname=${$1/^\.$/^$}
# P_REP=${P/./_}
# TODO: Pass the compiler flags

# this is bad
# echo "$1" | sed -e 's/^.*\..*$/^.*$/g'

if [ -n "$1" ] && [ $1 != "-g" ]; then
   outname=$(echo "$1" | sed -E 's/^(.*)\..*/\1/g')
else
   outname="RadixLiteral"
fi

if [[ "$*" == "-g" ]]; then
   debug="-g"
fi

#for clang compilation
clang="_clang"

#if any of the flags is -g then append -g to the compile command

find test/ -name "$outname*" | xargs g++-9 -o $outname $debug -std=c++2a -fconcepts
#find test/ -name "$outname*" | xargs clang++ -o $outname$clang -std=c++14 -Wno-unused-value
